package com.example.mftmock.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

@RestController
@RequestMapping("/invoke/oauth2")
public class AccessTokenController {

    @PostMapping("/getAccessToken")
    public ResponseEntity<Map<String, Object>> generateAccessToken(@RequestBody Map<String, String> request) {
        String clientId = request.get("client_id");
        String clientSecret = request.get("client_secret");
        String grantType = request.get("grant_type");

        Map<String, Object> response = new HashMap<>();
        if ("client_credentials".equalsIgnoreCase(grantType)
                && clientId != null && clientSecret != null) {
            response.put("access_token", UUID.randomUUID().toString());
            response.put("token_type", "Bearer");
            response.put("expires_in", 3600);
            response.put("issued_at", OffsetDateTime.now().toString());
            return ResponseEntity.ok(response);
        } else {
            response.put("error", "invalid_client_credentials");
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(response);
        }
    }
}
